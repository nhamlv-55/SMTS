#!/bin/bash

if [ $# != 3 ]; then
    echo "Usage: $0 <provide benchs dir>"
    exit 1
fi
function get_abs_path {
  echo $(cd $(dirname $1); pwd)/$(basename $1)
}
SCRIPT_ROOT=$(get_abs_path $(dirname $0))
#echo $SCRIPT_ROOT
total=0
bashstr=''


name=$(basename $1)
echo $name

port=3000
i=0
gname=$name-$(date +'%F')
scriptdir=$SCRIPT_ROOT'/packed/'
outd=$SCRIPT_ROOT'/result/'
mkdir -p ${scriptdir}

find $1 -name '*.bz2' |
while read -r file;
  do
#    echo $file
    ((total=total+1))
    if  [ ${total} == $2 ]
        then
          filepaths+="'$file'"
       else
          filepaths+="'$file'",
     fi

    if  [ ${total} == $2 ]
      then

        if  [ ${port} == 3003 ]
          then
            port=3000
            i=$((i+1))
            echo $SCRIPT_ROOT'/packed/'$gname''-$i'.sh'
            echo "Send for Node" ${i}
            echo ''
            sleep 1
        fi

        if  [ ${i} == 6 ]
          then
            break
        fi

        command=$3'smts.py -o3 -p '$port' -fp '
        if  [ ${port} == 3002 ]
          then
            bashstr+="$command""$filepaths" ;
            bashstr+=" & wait"
#              echo $bashstr
            ex=$1;
            bname=`basename $ex`
            scrname=$SCRIPT_ROOT'/packed/'$gname''-$i'.sh'
#            echo $scrname
            cat << _EOF_ > $scrname
#!/bin/bash
## Generated by $0
## From $ex
#SBATCH --time=00:45:00
#SBATCH --exclusive
#SBATCH --nodes=1
#SBATCH --mem=0
#SBATCH --partition=slim
#SBATCH --output=$outd/${gname}-$i.out
#SBATCH --error=$outd/${gname}-$i.err

output=$outd

_EOF_

#          i=$((i+1))
          cat << _EOF_ >> $scrname
 (
    chmod +x $scrname
    $bashstr
 ) > \$output/${gname}-$i.out 2> \$output/${gname}-$i.err &
_EOF_

        #    echo "wait" >> $packedscrd/$scrname
#            echo $packedscrd
#            echo $scrname

            bashstr=''
          else
            bashstr+="$command""$filepaths" ;
            bashstr+=" & "
        fi

        filepaths=''
        total=0
        ((port=port+1))
    fi

  done
echo "Construct and send the above jobs to batch queue?"
read -p "y/N? "

if [[ ${REPLY} != y ]]; then
    echo "Aborting."
    exit 1
fi

mkdir -p $outd
#${WORKSCRIPT} ${smtServer} ${scriptdir} ${resultdir} ${config} ${bmpath}/*.smt2.bz2

for script in ${scriptdir}/*.sh; do
    echo ${script};
    sh ${script};
#    sbatch ${script};
    sleep 1;
done



